[{"id":0,"href":"/mobile_robotics/external_localisation/","title":"External localisation","section":"Welcome to mobile robotics","content":"External localisation #  Placeholder\n"},{"id":1,"href":"/mobile_robotics/sensors/","title":"Sensors","section":"Welcome to mobile robotics","content":"Sensors #  Placeholder\nGet Home  "},{"id":2,"href":"/mobile_robotics/programming/","title":"Programming","section":"Welcome to mobile robotics","content":"Setting Up #  Now that you have tested that the robot functions correctly. We will begin to go through the main body of code that you will be using thoughout your project. It is highly suggested to install VS code, (a code editor like spyder and Jupyter Notebook), as it will show all the python files that you need to work with on the side.\nInstall VSCode  Both the Land Rover and the Robotic vessel will use the same code. Depending on your robot, you will need to configure it in the \u0026ldquo;configuration.yaml\u0026rdquo; file.\nThe installation will take you to a github repository. To install, click on the code button then install the code by clicking the \u0026lsquo;download zip\u0026rsquo; in the dropdown menu\nMain Code   Once installed, extract the folder and open mobile_robotics_python in vs code within mobile_robotics_python-main/mobile_robotics_python-main/src open the folder mobile_robotics_python. Once opened the folder should look something like this: Folder Introduction #  This folder will be where you will write your code throughout the project. Although the code might look a little intimidating at first. Most of the files withing the folder will work in the background and therefore will not need to be tampered with.\nThe objective of your course will be to create new localization_solutions and navigations_solutions so that the robot is able to navigate autonomously to its best ability.\nHow the code is structured #  When the the code is run, it will got through the main loop within robot.py, the loop follows a sense, think, act structure.\nwhile not self.mission_control.finished: # Read sensors measurements = [] if self.compass is not None: msg = self.compass.read() measurements.append(msg) if self.encoder is not None: self.encoder.yaw_rad = self.compass.yaw_rad msg = self.encoder.read() measurements.append(msg) if self.external_positioning is not None: msg = self.external_positioning.read() print(msg) #measurements.append(msg) if self.lidar is not None: msg = self.lidar.read()  diagram #  plantuml @startuml class Example { - String name - int number\n+void getName() +void getNumber() +String toString()  } @enduml\n Next slide\n "},{"id":3,"href":"/mobile_robotics/intelligent_mobile_robotics/","title":"Intelligent mobile robotics","section":"Welcome to mobile robotics","content":"Intelligent mobile robotics #  Placeholder\n"},{"id":4,"href":"/mobile_robotics/maritime_robotics/","title":"Maritime robotics","section":"Welcome to mobile robotics","content":"Maritime robotics #  Placeholder\n"},{"id":5,"href":"/mobile_robotics/pi_configuration/","title":"pi_configuration","section":"Welcome to mobile robotics","content":"Chrony Configuration #  Chrony is an implementation of NTP, it allows for the pi\u0026rsquo;s to synchronize their time even if internet is not connected to one of them. It acts as a daemon in the background. So when setup it should never need to be reconfigured or edited with afterwards.\nServer Configuration (Camera system Pi) #   Install an editor of your choice (nano, vim, gedit), for example for vim you would write  sudo apt install vim Install chrony with  sudo apt install chrony TBD  Client Configuration (student Raspberry Pi) #   Install an editor of your choice (nano, vim, gedit), for example for vim you would write  sudo apt install vim Install chrony with  sudo apt install chrony Find or ask the IP address of the chrony server in the local network (the wifi router network). It should be something like 192.168.0.X, where the last X will change for a number 0-254. Edit chrony configuration, and add the following line at the top of the file  server 192.168.0.X where X has to be changed for the correct IP. The file is located at /etc/chrony/chrony.conf. To edit it, you will need to use sudo, for example:\nsudo vi /etc/chrony/chrony.conf Verify that you can get the updates. First restart chrony with  sudo systemctl restart chrony and now verify that chrony is using your IP by running the command\nchronyc sources "},{"id":6,"href":"/mobile_robotics/intelligent_mobile_robotics/platform/","title":"Platform","section":"Intelligent mobile robotics","content":"Platform #  "},{"id":7,"href":"/mobile_robotics/maritime_robotics/platform/","title":"Platform","section":"Maritime robotics","content":"Platform #  "}]